<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3633_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3633_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sun Feb 21 16:19:17 2021
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[a]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[9]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[4]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[28]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[27]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[26]">_sputc</a> from _sputc.o(.text) referenced from vsprintf.o(.text)
 <LI><a href="#[69]">ancsc_cleanup</a> from ancsc.o(.text) referenced from ancsc.o(.constdata)
 <LI><a href="#[68]">ancsc_create</a> from ancsc.o(.text) referenced from ancsc.o(.constdata)
 <LI><a href="#[6f]">ancsc_data_src_ntf_cfg_req_handler</a> from ancsc_task.o(.text) referenced from ancsc_task.o(.constdata)
 <LI><a href="#[67]">ancsc_destroy</a> from ancsc.o(.text) referenced from ancsc.o(.constdata)
 <LI><a href="#[6b]">ancsc_enable_req_handler</a> from ancsc_task.o(.text) referenced from ancsc_task.o(.constdata)
 <LI><a href="#[66]">ancsc_init</a> from ancsc.o(.text) referenced from ancsc.o(.constdata)
 <LI><a href="#[6a]">ancsc_msg_default_handler</a> from ancsc_task.o(.text) referenced from ancsc_task.o(.constdata)
 <LI><a href="#[6e]">ancsc_ntf_src_ntf_cfg_req_handler</a> from ancsc_task.o(.text) referenced from ancsc_task.o(.constdata)
 <LI><a href="#[70]">ancsc_wr_cntl_point_req_handler</a> from ancsc_task.o(.text) referenced from ancsc_task.o(.constdata)
 <LI><a href="#[52]">app_ancs_req_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[30]">app_batt_add_bas</a> from app_batt.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[32]">app_batt_msg_dflt_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[2f]">app_dis_add_dis</a> from app_dis.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[2d]">app_f000_add_f000s</a> from app_f000.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[7c]">app_f000_msg_dflt_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[2e]">app_f020_add_f020s</a> from app_f020.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[8d]">app_f020_msg_dflt_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[39]">app_ffc1_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[3b]">app_ffc2_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[54]">app_mtu_exchange_req_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[31]">app_oad_add_oads</a> from app_oads.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[37]">app_oads_msg_dflt_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[53]">app_period_timer_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3d]">app_sec_msg_dflt_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[51]">app_send_security_req_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[50]">app_update_conn_param_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[42]">appm_msg_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[34]">bass_batt_level_ntf_cfg_ind_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[61]">bass_batt_level_upd_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[5f]">bass_cleanup</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[5e]">bass_create</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[5d]">bass_destroy</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[60]">bass_enable_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[33]">bass_enable_rsp_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[5c]">bass_init</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[35]">batt_level_upd_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[58]">diss_cleanup</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[57]">diss_create</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[56]">diss_destroy</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[55]">diss_init</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[59]">diss_set_value_req_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[5b]">diss_value_cfm_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[36]">diss_value_req_ind_handler</a> from app_dis.o(.text) referenced from app_dis.o(.constdata)
 <LI><a href="#[86]">f000s_cleanup</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[85]">f000s_create</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[84]">f000s_destroy</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[7d]">f000s_f004_val_ntf_cfg_ind_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[87]">f000s_f004_val_upd_req_handler</a> from f000s_task.o(.text) referenced from f000s_task.o(.constdata)
 <LI><a href="#[7e]">f000s_f005_val_ind_cfg_ind_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[88]">f000s_f005_val_upd_req_handler</a> from f000s_task.o(.text) referenced from f000s_task.o(.constdata)
 <LI><a href="#[83]">f000s_init</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[81]">f002_writer_cmd_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[82]">f003_writer_req_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[7f]">f004_val_upd_rsp_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[80]">f005_val_upd_rsp_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[97]">f020s_cleanup</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[96]">f020s_create</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[95]">f020s_destroy</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[8e]">f020s_f024_val_ntf_cfg_ind_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[98]">f020s_f024_val_upd_req_handler</a> from f020s_task.o(.text) referenced from f020s_task.o(.constdata)
 <LI><a href="#[8f]">f020s_f025_val_ind_cfg_ind_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[99]">f020s_f025_val_upd_req_handler</a> from f020s_task.o(.text) referenced from f020s_task.o(.constdata)
 <LI><a href="#[94]">f020s_init</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[92]">f022_writer_cmd_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[93]">f023_writer_req_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[90]">f024_val_upd_rsp_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[91]">f025_val_upd_rsp_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[24]">flash_read_complete_cb</a> from w25x40c.o(.text) referenced from w25x40c.o(.text)
 <LI><a href="#[3f]">gapc_bond_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[3e]">gapc_bond_req_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[4c]">gapc_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4a]">gapc_connection_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4d]">gapc_disconnect_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[41]">gapc_encrypt_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[40]">gapc_encrypt_req_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[48]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4b]">gapc_param_update_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4e]">gapc_param_updated_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[49]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[44]">gapm_activity_created_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[45]">gapm_activity_stopped_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[46]">gapm_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[47]">gapm_gen_rand_nb_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[43]">gapm_profile_added_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[62]">gattc_att_info_req_ind_handler</a> from bass_task.o(.text) referenced 3 times from bass_task.o(.constdata)
 <LI><a href="#[65]">gattc_cmp_evt_handler</a> from bass_task.o(.text) referenced 5 times from bass_task.o(.constdata)
 <LI><a href="#[71]">gattc_event_ind_handler</a> from ancsc_task.o(.text) referenced from ancsc_task.o(.constdata)
 <LI><a href="#[4f]">gattc_mtu_changed_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[5a]">gattc_read_req_ind_handler</a> from diss_task.o(.text) referenced 5 times from diss_task.o(.constdata)
 <LI><a href="#[6d]">gattc_sdp_svc_ind_handler</a> from ancsc_task.o(.text) referenced from ancsc_task.o(.constdata)
 <LI><a href="#[63]">gattc_write_req_ind_handler</a> from bass_task.o(.text) referenced 4 times from bass_task.o(.constdata)
 <LI><a href="#[b]">main</a> from main.o(.text) referenced from __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
 <LI><a href="#[18]">nvds_del</a> from nvds.o(.text) referenced from rwip.o(.text)
 <LI><a href="#[1b]">nvds_erase</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[16]">nvds_get</a> from nvds.o(.text) referenced from rwip.o(.text)
 <LI><a href="#[17]">nvds_put</a> from nvds.o(.text) referenced from rwip.o(.text)
 <LI><a href="#[19]">nvds_read</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[1a]">nvds_write</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[75]">oads_cleanup</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[74]">oads_create</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[73]">oads_destroy</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[76]">oads_enable_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[38]">oads_enable_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[77]">oads_ffc1_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[3a]">oads_ffc1_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[78]">oads_ffc2_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[3c]">oads_ffc2_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[72]">oads_init</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[13]">platform_reset</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[11]">prf_add_profile</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[10]">prf_cleanup</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[f]">prf_create</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[c]">prf_get_id_from_task</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[d]">prf_get_task_from_id</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[e]">prf_init</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[21]">rf_force_agc_enable</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[20]">rf_reset</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1c]">rf_rpl_reg_rd</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1d]">rf_rpl_reg_wr</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[22]">rf_rssi_convert</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1f]">rf_sleep</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[23]">rf_txpwr_cs_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1e]">rf_txpwr_dbm_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[14]">rwble_sleep_wakeup_end</a> from rwble.o(.text) referenced from main.o(.text)
 <LI><a href="#[12]">rwip_reset</a> from rwip.o(.text) referenced from main.o(.text)
 <LI><a href="#[25]">spi_result_callback</a> from spi.o(.text) referenced from lcd360.o(.text)
 <LI><a href="#[9e]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[8]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[15]">uart2_printf</a> from uart2.o(.text) referenced from main.o(.text)
 <LI><a href="#[2c]">uart_flow_off</a> from uart.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[2b]">uart_flow_on</a> from uart.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[29]">uart_read</a> from uart.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[2a]">uart_write</a> from uart.o(.text) referenced from main.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[219]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[21a]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[21b]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[21c]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[21d]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[13a]"></a>ecc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[13c]"></a>h4tl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[154]"></a>h4tl_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[137]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[146]"></a>ke_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[152]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[147]"></a>ke_event_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
</UL>

<P><STRONG><a name="[138]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[1a3]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[1a7]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_cleanup
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_destroy
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_destroy
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_destroy
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[105]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_data_src_ntf_cfg_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_ntf_src_ntf_cfg_req_handler
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_unregister_atthdl2gatt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_read_char_send
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_delete_call
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancs_add_ancsc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_incomingcall_number
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_Socialmsg
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_ntf_rsp_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_rsp_handler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_prf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_req_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_add_f020s
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_add_f000s
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_advertising
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f025_val
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f025_send_ind
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f005_val
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f005_send_ind
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
</UL>

<P><STRONG><a name="[106]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_data_src_ntf_cfg_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_ntf_src_ntf_cfg_req_handler
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_unregister_atthdl2gatt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_read_char_send
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_delete_call
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancs_add_ancsc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_incomingcall_number
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_Socialmsg
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_ntf_rsp_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_rsp_handler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_prf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_req_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_add_f020s
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_add_f000s
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_advertising
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f025_val
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f025_send_ind
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f005_val
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f005_send_ind
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
</UL>

<P><STRONG><a name="[ff]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[100]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_data_src_ntf_cfg_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_ntf_src_ntf_cfg_req_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_cleanup
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_create
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f025_val_upd_req_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f005_val_upd_req_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[11c]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_data_src_ntf_cfg_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_ntf_src_ntf_cfg_req_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_ind_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f025_val_upd_req_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f005_val_upd_req_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
</UL>

<P><STRONG><a name="[172]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[120]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[118]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
</UL>

<P><STRONG><a name="[132]"></a>ble_util_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[134]"></a>llc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[133]"></a>lld_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[135]"></a>llm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[13d]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[143]"></a>sch_alarm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[140]"></a>sch_arb_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[142]"></a>sch_plan_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[141]"></a>sch_prog_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[14c]"></a>sch_prog_fifo_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[144]"></a>sch_slice_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[13f]"></a>aes_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[1a5]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[1ac]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[1a6]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[1ab]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[153]"></a>rwip_slot_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[149]"></a>rwip_timer_hs_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[14a]"></a>rwip_timer_hus_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[14f]"></a>rwip_timer_10ms_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[14e]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[150]"></a>rwip_crypt_isr_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[151]"></a>rwip_sw_int_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[156]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[14d]"></a>rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[131]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[14b]"></a>rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[145]"></a>rwip_driver_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[1b4]"></a>gapc_get_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[11a]"></a>gapc_get_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[168]"></a>attm_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_extract_svc_info
</UL>

<P><STRONG><a name="[1a2]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[1ba]"></a>attm_svc_create_db128</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[1ae]"></a>attm_att_set_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[13e]"></a>rwble_hl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[182]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_r_bytes
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[208]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>

<P><STRONG><a name="[119]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[e4]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_respone
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_add_f020s
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_add_f000s
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f025_val
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f025_send_ind
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f005_val
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f005_send_ind
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
</UL>

<P><STRONG><a name="[1c3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[fe]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart2_buffer
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_init
</UL>

<P><STRONG><a name="[fc]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[11b]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>

<P><STRONG><a name="[d8]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[d9]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[eb]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[ec]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[10b]"></a>__ARM_common_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler (via BLX)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_notification_ntf_unpack (via BLX)
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via BLX)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler (via BLX)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler (via BLX)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next (via BLX)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch (via BLX)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup (via BLX)
</UL>

<P><STRONG><a name="[9e]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[a0]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[a2]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[9f]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[a4]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a6]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[a7]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size 0 bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[a8]"></a>_printf_n</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (via Veneer)
</UL>

<P><STRONG><a name="[1fe]"></a>_printf_percent</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (via BLX)
</UL>

<P><STRONG><a name="[aa]"></a>_printf_p</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr (via Veneer)
</UL>

<P><STRONG><a name="[ac]"></a>_printf_f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[ae]"></a>_printf_e</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[af]"></a>_printf_g</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[b0]"></a>_printf_a</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[b2]"></a>_printf_i</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[b4]"></a>_printf_d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[b5]"></a>_printf_u</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[b6]"></a>_printf_o</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct (via Veneer)
</UL>

<P><STRONG><a name="[b8]"></a>_printf_x</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex (via Veneer)
</UL>

<P><STRONG><a name="[ba]"></a>_printf_lli</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[bc]"></a>_printf_lld</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[bd]"></a>_printf_llu</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[be]"></a>_printf_llo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct (via Veneer)
</UL>

<P><STRONG><a name="[c0]"></a>_printf_llx</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex (via Veneer)
</UL>

<P><STRONG><a name="[c2]"></a>_printf_c</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char (via Veneer)
</UL>

<P><STRONG><a name="[c4]"></a>_printf_s</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string (via Veneer)
</UL>

<P><STRONG><a name="[c6]"></a>_printf_lc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar (via Veneer)
</UL>

<P><STRONG><a name="[c8]"></a>_printf_ls</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring (via Veneer)
</UL>

<P><STRONG><a name="[d0]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via BLX)
</UL>

<P><STRONG><a name="[ca]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via BLX)
</UL>

<P><STRONG><a name="[cc]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (via BLX)
</UL>

<P><STRONG><a name="[cd]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (via BLX)
</UL>

<P><STRONG><a name="[d4]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via BLX)
</UL>

<P><STRONG><a name="[a5]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[cf]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via BLX)
</UL>

<P><STRONG><a name="[d1]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[20f]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BLX)
</UL>

<P><STRONG><a name="[d3]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via BLX)
</UL>

<P><STRONG><a name="[d5]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via BLX)
</UL>

<P><STRONG><a name="[13]"></a>platform_reset</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>bdaddr_env_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>main</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_download_check
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_state_get
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gpio_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_detect
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_color
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_read
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_rtc_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stack_integrity_check
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[13b]"></a>rwip_eif_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[fd]"></a>appm_init</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[107]"></a>appm_add_svc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[108]"></a>appm_disconnect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[109]"></a>appm_delete_advertising</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[10a]"></a>appm_adv_fsm_next</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
</UL>

<P><STRONG><a name="[10d]"></a>appm_update_param</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_conn_param_req_ind_handler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[10e]"></a>appm_get_dev_name</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[10f]"></a>appm_update_adv_state</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[103]"></a>app_batt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[30]"></a>app_batt_add_bas</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>app_batt_enable_prf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[111]"></a>app_batt_send_lvl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_batt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[102]"></a>app_dis_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[2f]"></a>app_dis_add_dis</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>app_oads_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[31]"></a>app_oad_add_oads</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>app_oads_enable_prf</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[114]"></a>app_ffc1_ntf_req</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[115]"></a>app_ffc2_ntf_req</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[101]"></a>app_sec_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[11d]"></a>app_sec_get_bond_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[116]"></a>app_sec_remove_bond</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_sec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[117]"></a>app_sec_send_security_req</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_security_req_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[123]"></a>app_ancsc_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[124]"></a>app_ancs_add_ancsc</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[122]"></a>app_ancsc_enable_prf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_ancsc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancs_req_handler
</UL>

<P><STRONG><a name="[12e]"></a>app_ancsc_delete_call</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[130]"></a>rwble_init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[136]"></a>rwble_isr</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[155]"></a>rwble_sleep_enter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[14]"></a>rwble_sleep_wakeup_end</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rwble.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>rwip_init</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_slice_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>rwip_reset</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_slice_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>rwip_schedule</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[148]"></a>rwip_isr</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_fifo_isr
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_handler
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_isr_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[f7]"></a>rwip_sleep</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_enter
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_stop
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slot_2_lpcycles
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>nvds_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>nvds_get</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>nvds_del</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(.text)
</UL>
<P><STRONG><a name="[15c]"></a>nvds_lock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, nvds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>

<P><STRONG><a name="[17]"></a>nvds_put</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_remove_bond
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(.text)
</UL>
<P><STRONG><a name="[1b5]"></a>prf_pack_char_pres_fmt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[15f]"></a>prf_read_char_send</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[161]"></a>prf_register_atthdl2gatt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
</UL>

<P><STRONG><a name="[162]"></a>prf_unregister_atthdl2gatt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[163]"></a>prf_disc_svc_send</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[164]"></a>prf_disc_svc_send_uuid128</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
</UL>

<P><STRONG><a name="[165]"></a>prf_gatt_write</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_wr_cntl_point_req_handler
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write_ntf_ind
</UL>

<P><STRONG><a name="[166]"></a>prf_gatt_write_ntf_ind</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_data_src_ntf_cfg_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_ntf_src_ntf_cfg_req_handler
</UL>

<P><STRONG><a name="[1b8]"></a>prf_check_svc_char_validity</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
</UL>

<P><STRONG><a name="[1b9]"></a>prf_check_svc_char_desc_validity</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
</UL>

<P><STRONG><a name="[167]"></a>prf_extract_svc_info</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid16_comp
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_ind_handler
</UL>

<P><STRONG><a name="[169]"></a>prf_client_att_info_rsp</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[e]"></a>prf_init</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[11]"></a>prf_add_profile</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>prf_create</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[10]"></a>prf_cleanup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[1a8]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_task_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_wr_cntl_point_req_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_data_src_ntf_cfg_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_ntf_src_ntf_cfg_req_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_ind_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_task_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_task_init
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f025_val_upd_req_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_task_init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_handle
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f005_val_upd_req_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_task_init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_handle
</UL>

<P><STRONG><a name="[160]"></a>prf_src_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_unregister_atthdl2gatt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_read_char_send
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f025_val
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f005_val
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
</UL>

<P><STRONG><a name="[16a]"></a>prf_dst_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[c]"></a>prf_get_id_from_task</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>prf_get_task_from_id</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_delete_call
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_incomingcall_number
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_Socialmsg
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_ntf_rsp_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_rsp_handler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_prf
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f025_send_ind
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f005_send_ind
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[17b]"></a>set_flash_clk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
</UL>

<P><STRONG><a name="[174]"></a>get_flash_ID</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[178]"></a>flash_read_sr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
</UL>

<P><STRONG><a name="[173]"></a>flash_write_sr</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
</UL>

<P><STRONG><a name="[175]"></a>flash_wp_256k</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[176]"></a>flash_wp_ALL</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[177]"></a>flash_advance_init</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[17a]"></a>clr_flash_qwfr</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
</UL>

<P><STRONG><a name="[179]"></a>flash_set_dual_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_flash_qwfr
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[e3]"></a>flash_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17c]"></a>flash_erase_sector</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[db]"></a>flash_read_data</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>

<P><STRONG><a name="[17d]"></a>flash_write_data</STRONG> (Thumb, 346 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[157]"></a>flash_read</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[158]"></a>flash_write</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_write
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
</UL>

<P><STRONG><a name="[159]"></a>flash_erase</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_erase
</UL>

<P><STRONG><a name="[17e]"></a>flash_test</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[180]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
</UL>

<P><STRONG><a name="[17f]"></a>CLK32K_AutoCali_init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[181]"></a>kmod_calibration</STRONG> (Thumb, 318 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[183]"></a>xvr_reg_initial</STRONG> (Thumb, 382 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[139]"></a>rf_init</STRONG> (Thumb, 758 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[193]"></a>Delay_us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>

<P><STRONG><a name="[184]"></a>gpio_config</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gpio_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_read
</UL>

<P><STRONG><a name="[1d7]"></a>gpio_get_input</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_detect
</UL>

<P><STRONG><a name="[186]"></a>gpio_set</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_image
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteComm
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_chip
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_sector
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_read_data
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_deviceID_get
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_disable
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_enable
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_status_set
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_status_get
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_chipID_get
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_power_down_set
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_color
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_read
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[e2]"></a>gpio_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[185]"></a>gpio_triger</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[19e]"></a>gpio_isr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[e9]"></a>spi_init</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[187]"></a>spi_waitbusying</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_read
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_write
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_read
</UL>

<P><STRONG><a name="[188]"></a>spi_write_read</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_waitbusying
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_test
</UL>

<P><STRONG><a name="[189]"></a>spi_write</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_waitbusying
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteComm
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_bytes
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
</UL>

<P><STRONG><a name="[18a]"></a>spi_read</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_waitbusying
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_r_bytes
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_r_byte
</UL>

<P><STRONG><a name="[18d]"></a>spi_send</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_write
</UL>

<P><STRONG><a name="[190]"></a>spi_receiv</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_read
</UL>

<P><STRONG><a name="[19f]"></a>spi_isr</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[f5]"></a>spi_send_state_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18b]"></a>spi_dma_write</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_config_write
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_waitbusying
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_image
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_color
</UL>

<P><STRONG><a name="[18e]"></a>spi_dma_read</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_config_read
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receiv
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_waitbusying
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_read_data
</UL>

<P><STRONG><a name="[25]"></a>spi_result_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd360.o(.text)
</UL>
<P><STRONG><a name="[191]"></a>spi_master_test</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_read
</UL>

<P><STRONG><a name="[dd]"></a>icu_init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>cpu_reduce_voltage_sleep</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f9]"></a>cpu_wakeup</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fa]"></a>cpu_idle_sleep</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>mcu_clk_switch</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[192]"></a>cpu_reset</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
</UL>

<P><STRONG><a name="[de]"></a>wdt_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1be]"></a>wdt_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
</UL>

<P><STRONG><a name="[e1]"></a>uart2_init</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>uart2_send</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[194]"></a>clear_uart2_buffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[15]"></a>uart2_printf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[19d]"></a>uart2_isr</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[e0]"></a>uart_init</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[197]"></a>uart_send</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_respone
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[d7]"></a>uart0_printf</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f003_writer_req_handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f002_writer_cmd_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_msg_dflt_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f005_val_upd_rsp_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f004_val_upd_rsp_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f005_val_ind_cfg_ind_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_ntf_cfg_ind_handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_image
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_complete_cb
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_msg_default_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_ind_handler
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_rtc_isr
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_result_callback
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_waitbusying
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_delete_call
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancs_add_ancsc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_init
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_incomingcall_number
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_IncomingCall_unpack
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_Socialmsg
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_data_ntf_handler
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_notification_ntf_unpack
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_data_ntf_rsp_handler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_ntf_rsp_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_rsp_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_msg_dflt_handler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_prf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_req_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_conn_param_req_ind_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_rsp_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_rsp_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_writer_req_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_msg_dflt_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_detect
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stack_integrity_check
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f025_val_upd_req_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f023_writer_req_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_writer_cmd_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_msg_dflt_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f025_val_upd_rsp_handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f024_val_upd_rsp_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f025_val_ind_cfg_ind_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_ntf_cfg_ind_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f005_val_upd_req_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
</UL>

<P><STRONG><a name="[2b]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[29]"></a>uart_read</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>uart_write</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[198]"></a>uart_rx_cmd_handler</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
</UL>

<P><STRONG><a name="[199]"></a>uart_rx_handler</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[19a]"></a>uart_isr</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[19b]"></a>uart_rx_cmd_respone</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[f6]"></a>uart_download_check</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e8]"></a>aon_rtc_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, aon_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19c]"></a>aon_rtc_isr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, aon_rtc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[df]"></a>intc_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>intc_irq</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_rtc_isr
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_isr
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_isr
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[a1]"></a>intc_fiq</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_isr
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[18c]"></a>dma_config_write</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_write
</UL>

<P><STRONG><a name="[18f]"></a>dma_config_read</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_read
</UL>

<P><STRONG><a name="[1a0]"></a>dma_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[1a1]"></a>diss_compute_cfg_flag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[170]"></a>diss_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1ad]"></a>diss_handle_to_value</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[1a9]"></a>diss_value_to_handle</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[1aa]"></a>diss_check_val_len</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[1a4]"></a>diss_task_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[1b0]"></a>bass_get_att_handle</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
</UL>

<P><STRONG><a name="[171]"></a>bass_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1b2]"></a>bass_get_att_idx</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1b3]"></a>bass_exe_operation</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[1af]"></a>bass_task_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[16f]"></a>ancsc_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ancsc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1b7]"></a>ancsc_enable_rsp_send</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, ancsc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_req_handler
</UL>

<P><STRONG><a name="[1b6]"></a>ancsc_task_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_init
</UL>

<P><STRONG><a name="[1bc]"></a>oad_save_reciveData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[1bd]"></a>oad_updating_user_section_begin</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[f4]"></a>oad_updating_user_section_pro</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c2]"></a>oad_updating_user_section_end</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[113]"></a>oadImgIdentifyWrite</STRONG> (Thumb, 786 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
</UL>

<P><STRONG><a name="[1c1]"></a>oadImgBlockWrite</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_end
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[16c]"></a>oads_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1bb]"></a>oads_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[1c4]"></a>spi_device_w_byte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_chip
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_sector
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_read_data
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_deviceID_get
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_disable
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_enable
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_status_set
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_status_get
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_chipID_get
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_power_down_set
</UL>

<P><STRONG><a name="[1c5]"></a>spi_device_r_byte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_deviceID_get
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_status_get
</UL>

<P><STRONG><a name="[1c6]"></a>spi_device_w_bytes</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
</UL>

<P><STRONG><a name="[1c7]"></a>spi_device_r_bytes</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_chipID_get
</UL>

<P><STRONG><a name="[1c8]"></a>flash_device_power_down_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_write
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_chip
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_read
</UL>

<P><STRONG><a name="[1c9]"></a>flash_device_chipID_get</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_r_bytes
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_init
</UL>

<P><STRONG><a name="[ef]"></a>flash_device_spi_init</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_chipID_get
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_power_down_set
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cb]"></a>flash_device_spi_status_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_r_byte
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_busy_wait
</UL>

<P><STRONG><a name="[1cc]"></a>flash_device_busy_wait</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_chip
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_sector
</UL>

<P><STRONG><a name="[1cd]"></a>flash_device_spi_status_set</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_chip
</UL>

<P><STRONG><a name="[1ce]"></a>flash_device_write_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_chip
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_erase_sector
</UL>

<P><STRONG><a name="[1cf]"></a>flash_device_write_disable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[1d0]"></a>flash_device_deviceID_get</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_r_byte
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[24]"></a>flash_read_complete_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25x40c.o(.text)
</UL>
<P><STRONG><a name="[1d1]"></a>flash_device_read_data</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_read
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_read
</UL>

<P><STRONG><a name="[1d2]"></a>flash_device_erase_sector</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_enable
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_busy_wait
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[1d3]"></a>flash_device_write_page</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_enable
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_busy_wait
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_bytes
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_data
</UL>

<P><STRONG><a name="[1d4]"></a>flash_device_write_data</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_write
</UL>

<P><STRONG><a name="[1d5]"></a>flash_device_erase_chip</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_enable
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_spi_status_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_busy_wait
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_power_down_set
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_device_w_byte
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[f2]"></a>app_flash_read</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_read_data
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_power_down_set
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d6]"></a>app_flash_write</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, w25x40c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_data
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_power_down_set
</UL>

<P><STRONG><a name="[f1]"></a>key_press_detect</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>lcd_gpio_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d8]"></a>WriteComm</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1d9]"></a>WriteData</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFrame
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDispData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1da]"></a>WriteDispData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd360.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>

<P><STRONG><a name="[ee]"></a>LCD_Init</STRONG> (Thumb, 2988 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteComm
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc]"></a>BlockWrite</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFrame
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_image
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_color
</UL>

<P><STRONG><a name="[1dd]"></a>display_image</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, lcd360.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[f3]"></a>display_color</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1de]"></a>DispFrame</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, lcd360.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>

<P><STRONG><a name="[1df]"></a>app_f000_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_f000.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2d]"></a>app_f000_add_f000s</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1e0]"></a>app_f004_send_ntf</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f002_writer_cmd_handler
</UL>

<P><STRONG><a name="[1e1]"></a>app_f005_send_ind</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f002_writer_cmd_handler
</UL>

<P><STRONG><a name="[1e3]"></a>f000s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f005_val
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
</UL>

<P><STRONG><a name="[1e4]"></a>f000s_notify_f004_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
</UL>

<P><STRONG><a name="[1e5]"></a>f000s_indicate_f005_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f005_val_upd_req_handler
</UL>

<P><STRONG><a name="[16e]"></a>f000s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1e6]"></a>f000s_get_att_idx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1e2]"></a>f000s_task_init</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[1e7]"></a>app_f020_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_f020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2e]"></a>app_f020_add_f020s</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1e8]"></a>app_f024_send_ntf</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_writer_cmd_handler
</UL>

<P><STRONG><a name="[1e9]"></a>app_f025_send_ind</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_writer_cmd_handler
</UL>

<P><STRONG><a name="[1eb]"></a>f020s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f025_val
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
</UL>

<P><STRONG><a name="[1ec]"></a>f020s_notify_f024_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
</UL>

<P><STRONG><a name="[1ed]"></a>f020s_indicate_f025_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f025_val_upd_req_handler
</UL>

<P><STRONG><a name="[16d]"></a>f020s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1ee]"></a>f020s_get_att_idx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1ea]"></a>f020s_task_init</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
</UL>

<P><STRONG><a name="[195]"></a>vsprintf</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, vsprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[1f1]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[1f2]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[1f3]"></a>_printf_truncate_signed</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1f4]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1f0]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, _printf_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[b3]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, _printf_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via BLX)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i (via Veneer)
</UL>

<P><STRONG><a name="[a9]"></a>_printf_charcount</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n (via Veneer)
</UL>

<P><STRONG><a name="[1ef]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[26]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vsprintf.o(.text)
</UL>
<P><STRONG><a name="[1f8]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, _printf_wctomb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[bb]"></a>_printf_longlong_dec</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli (via Veneer)
</UL>

<P><STRONG><a name="[1fb]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[b7]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o (via Veneer)
</UL>

<P><STRONG><a name="[bf]"></a>_printf_ll_oct</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo (via Veneer)
</UL>

<P><STRONG><a name="[1fc]"></a>_printf_longlong_hex</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[b9]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x (via Veneer)
</UL>

<P><STRONG><a name="[c1]"></a>_printf_ll_hex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx (via Veneer)
</UL>

<P><STRONG><a name="[ab]"></a>_printf_hex_ptr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p (via Veneer)
</UL>

<P><STRONG><a name="[1f7]"></a>__printf</STRONG> (Thumb, 386 bytes, Stack size 0 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent (via BLX)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[1fa]"></a>_ll_udiv10</STRONG> (ARM, 152 bytes, Stack size 0 bytes, lludiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via BLX)
</UL>

<P><STRONG><a name="[1f6]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, _printf_intcommon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[204]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify (via BLX)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via BLX)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via BLX)
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (via Veneer)
</UL>

<P><STRONG><a name="[207]"></a>_printf_fp_hex_real</STRONG> (Thumb, 718 bytes, Stack size 0 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify (via BLX)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via BLX)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (via Veneer)
</UL>

<P><STRONG><a name="[209]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[c3]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c (via Veneer)
</UL>

<P><STRONG><a name="[c5]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s (via Veneer)
</UL>

<P><STRONG><a name="[20b]"></a>_printf_lcs_common</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[c7]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc (via Veneer)
</UL>

<P><STRONG><a name="[c9]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls (via Veneer)
</UL>

<P><STRONG><a name="[1f9]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, _wcrtomb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[1f5]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via BLX)
</UL>

<P><STRONG><a name="[20d]"></a>__rt_ctype_table</STRONG> (ARM, 20 bytes, Stack size 0 bytes, rt_ctype_table.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb (via BLX)
</UL>

<P><STRONG><a name="[cb]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common (via BLX)
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
</UL>

<P><STRONG><a name="[206]"></a>_printf_fp_infnan</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[200]"></a>_btod_etento</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, bigflt0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via BLX)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d2]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via BLX)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[215]"></a>strcmp</STRONG> (ARM, 240 bytes, Stack size 0 bytes, strcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[d6]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit (via BLX)
</UL>

<P><STRONG><a name="[201]"></a>_btod_d2e</STRONG> (ARM, 56 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[211]"></a>_d2e_denorm_low</STRONG> (ARM, 84 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[210]"></a>_d2e_norm_op1</STRONG> (ARM, 104 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[212]"></a>__btod_div_common</STRONG> (ARM, 712 bytes, Stack size 0 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[213]"></a>_e2e</STRONG> (ARM, 244 bytes, Stack size 0 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[202]"></a>_btod_ediv</STRONG> (ARM, 52 bytes, Stack size 0 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via BLX)
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[203]"></a>_btod_emul</STRONG> (ARM, 52 bytes, Stack size 0 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via BLX)
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[214]"></a>__btod_mult_common</STRONG> (ARM, 612 bytes, Stack size 0 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[205]"></a>__ARM_fpclassify</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via BLX)
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
</UL>

<P><STRONG><a name="[1fd]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[ce]"></a>_get_lc_numeric</STRONG> (ARM, 72 bytes, Stack size 0 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2 (via BLX)
</UL>

<P><STRONG><a name="[28]"></a>_get_lc_ctype</STRONG> (ARM, 72 bytes, Stack size 0 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[11e]"></a>__aeabi_ui2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler (via BLX)
</UL>

<P><STRONG><a name="[11f]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler (via BLX)
</UL>

<P><STRONG><a name="[216]"></a>_dmul</STRONG> (ARM, 364 bytes, Stack size 0 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[218]"></a>__fpl_dnaninf</STRONG> (ARM, 184 bytes, Stack size 0 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[217]"></a>__fpl_dretinf</STRONG> (ARM, 16 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[1]"></a>__ieee_status</STRONG> (ARM, 8 bytes, Stack size 0 bytes, istatus.o(x$fpl$ieeestatus))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via BLX)
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[ad]"></a>_printf_fp_dec</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[b1]"></a>_printf_fp_hex</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[9]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[8]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[a]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[fb]"></a>stack_integrity_check</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>rom_env_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>appm_set_adv_data</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
</UL>

<P><STRONG><a name="[34]"></a>bass_batt_level_ntf_cfg_ind_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>batt_level_upd_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>bass_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>app_batt_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>oads_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>app_oads_msg_dflt_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>app_ffc1_writer_req_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>app_ffc2_writer_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>oads_ffc1_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>oads_ffc2_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>gapc_bond_req_ind_handler</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>gapc_bond_ind_handler</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>gapc_encrypt_req_ind_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>gapc_encrypt_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>app_sec_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>app_get_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[44]"></a>gapm_activity_created_ind_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gapm_activity_stopped_ind_handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 438 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_get_bond_status
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_get_bond_status
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via BLX)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>appm_msg_handler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>gattc_mtu_changed_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>app_update_conn_param_req_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>app_send_security_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>app_ancs_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_enable_prf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>app_period_timer_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>app_mtu_exchange_req_handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>app_ancsc_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[126]"></a>app_ancsc_enable_rsp_handler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[127]"></a>app_ancsc_enable_ntf_rsp_handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[128]"></a>app_ancsc_enable_data_ntf_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[129]"></a>app_ancsc_notification_ntf_unpack</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_IncomingCall_unpack
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_Socialmsg
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_notification_nft_handler
</UL>

<P><STRONG><a name="[12c]"></a>app_ancsc_notification_nft_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_notification_ntf_unpack
</UL>

<P><STRONG><a name="[12d]"></a>app_ancsc_data_ntf_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[12b]"></a>app_ancsc_get_Socialmsg</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_notification_ntf_unpack
</UL>

<P><STRONG><a name="[12a]"></a>app_ancsc_IncomingCall_unpack</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_incomingcall_number
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_notification_ntf_unpack
</UL>

<P><STRONG><a name="[12f]"></a>app_ancsc_get_incomingcall_number</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, app_ancsc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_IncomingCall_unpack
</UL>

<P><STRONG><a name="[15d]"></a>nvds_walk_tag</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[19]"></a>nvds_read</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>nvds_write</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>nvds_erase</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[15b]"></a>nvds_browse_tag</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_lock
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>

<P><STRONG><a name="[15a]"></a>nvds_init_memory</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>

<P><STRONG><a name="[15e]"></a>nvds_purge</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[16b]"></a>prf_itf_get</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_prf_itf_get
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_prf_itf_get
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_prf_itf_get
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_prf_itf_get
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_prf_itf_get
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[20]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>rf_txpwr_cs_get</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>rf_force_agc_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>diss_init</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_compute_cfg_flag
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>diss_destroy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>diss_create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>diss_cleanup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>diss_set_value_req_handler</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_check_val_len
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_handle_to_value
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>diss_value_cfm_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>bass_init</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_task_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>bass_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>bass_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>bass_cleanup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[1b1]"></a>bass_notify_batt_lvl</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>

<P><STRONG><a name="[60]"></a>bass_enable_req_handler</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>bass_batt_level_upd_req_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>ancsc_init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, ancsc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_task_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>ancsc_destroy</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ancsc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>ancsc_create</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ancsc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>ancsc_cleanup</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ancsc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>ancsc_enable_req_handler</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>gattc_sdp_svc_ind_handler</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_extract_svc_info
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>ancsc_ntf_src_ntf_cfg_req_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write_ntf_ind
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>ancsc_data_src_ntf_cfg_req_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write_ntf_ind
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancsc_enable_rsp_send
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_check_svc_char_desc_validity
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_check_svc_char_validity
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>ancsc_msg_default_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>ancsc_wr_cntl_point_req_handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>gattc_event_ind_handler</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, ancsc_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancsc_task.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>oads_init</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_task_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db128
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>oads_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>oads_create</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>oads_cleanup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[1bf]"></a>oadImgIdentifyReq</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[1c0]"></a>oadImgBlockReq</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[76]"></a>oads_enable_req_handler</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>oads_ffc1_upd_req_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>oads_ffc2_upd_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[1ca]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, w25x40c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_write_page
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_read_data
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_device_chipID_get
</UL>

<P><STRONG><a name="[1db]"></a>Delay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd360.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[7d]"></a>f000s_f004_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>f000s_f005_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>f004_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>f005_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>app_f000_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>f002_writer_cmd_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f005_send_ind
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>f003_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>f000s_init</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>f000s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>f000s_create</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, f000s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>f000s_cleanup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, f000s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>f000s_f004_val_upd_req_handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>f000s_f005_val_upd_req_handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f005_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 340 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>f020s_f024_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>f020s_f025_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>f024_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>f025_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>app_f020_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>f022_writer_cmd_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f025_send_ind
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>f023_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>f020s_init</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>f020s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>f020s_create</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, f020s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>f020s_cleanup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, f020s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>f020s_f024_val_upd_req_handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>f020s_f025_val_upd_req_handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f025_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 340 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[1ff]"></a>_fp_digits</STRONG> (Thumb, 410 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via BLX)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via BLX)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via BLX)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e (via BLX)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[20e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[20a]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[20c]"></a>_printf_wc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<HR></body></html>
