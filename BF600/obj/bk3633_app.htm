<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3633_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3633_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Feb 26 09:06:41 2021
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d7]">enter_normal_app_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d7]">enter_normal_app_mode</a><BR>
 <LI><a href="#[d4]">enter_dut_fcc_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d4]">enter_dut_fcc_mode</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[7]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[3]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[2]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[23]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[50]">app_ancs_req_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[2e]">app_batt_add_bas</a> from app_batt.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[30]">app_batt_msg_dflt_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[2d]">app_dis_add_dis</a> from app_dis.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[28]">app_f000_add_f000s</a> from app_f000.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[70]">app_f000_msg_dflt_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[29]">app_f010_add_f010s</a> from app_f010.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[81]">app_f010_msg_dflt_handler</a> from app_f010.o(.text) referenced from app_f010.o(.constdata)
 <LI><a href="#[2a]">app_f020_add_f020s</a> from app_f020.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[92]">app_f020_msg_dflt_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[2b]">app_f030_add_f030s</a> from app_f030.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[a3]">app_f030_msg_dflt_handler</a> from app_f030.o(.text) referenced from app_f030.o(.constdata)
 <LI><a href="#[2c]">app_f040_add_f040s</a> from app_f040.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[b4]">app_f040_msg_dflt_handler</a> from app_f040.o(.text) referenced from app_f040.o(.constdata)
 <LI><a href="#[37]">app_ffc1_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[39]">app_ffc2_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[52]">app_mtu_exchange_req_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[2f]">app_oad_add_oads</a> from app_oads.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[35]">app_oads_msg_dflt_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[51]">app_period_timer_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3b]">app_sec_msg_dflt_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[4f]">app_send_security_req_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4e]">app_update_conn_param_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[54]">app_xs_user</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[40]">appm_msg_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[32]">bass_batt_level_ntf_cfg_ind_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[61]">bass_batt_level_upd_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[5f]">bass_cleanup</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[5e]">bass_create</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[5d]">bass_destroy</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[60]">bass_enable_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[31]">bass_enable_rsp_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[5c]">bass_init</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[33]">batt_level_upd_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[58]">diss_cleanup</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[57]">diss_create</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[56]">diss_destroy</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[55]">diss_init</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[59]">diss_set_value_req_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[5b]">diss_value_cfm_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[34]">diss_value_req_ind_handler</a> from app_dis.o(.text) referenced from app_dis.o(.constdata)
 <LI><a href="#[7a]">f000s_cleanup</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[79]">f000s_create</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[78]">f000s_destroy</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[72]">f000s_f002_val_ind_cfg_ind_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[7c]">f000s_f002_val_upd_req_handler</a> from f000s_task.o(.text) referenced from f000s_task.o(.constdata)
 <LI><a href="#[71]">f000s_f004_val_ntf_cfg_ind_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[7b]">f000s_f004_val_upd_req_handler</a> from f000s_task.o(.text) referenced from f000s_task.o(.constdata)
 <LI><a href="#[77]">f000s_init</a> from f000s.o(.text) referenced from f000s.o(.constdata)
 <LI><a href="#[74]">f002_val_upd_rsp_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[76]">f003_writer_req_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[73]">f004_val_upd_rsp_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[75]">f007_writer_cmd_handler</a> from app_f000.o(.text) referenced from app_f000.o(.constdata)
 <LI><a href="#[8b]">f010s_cleanup</a> from f010s.o(.text) referenced from f010s.o(.constdata)
 <LI><a href="#[8a]">f010s_create</a> from f010s.o(.text) referenced from f010s.o(.constdata)
 <LI><a href="#[89]">f010s_destroy</a> from f010s.o(.text) referenced from f010s.o(.constdata)
 <LI><a href="#[83]">f010s_f012_val_ind_cfg_ind_handler</a> from app_f010.o(.text) referenced from app_f010.o(.constdata)
 <LI><a href="#[8d]">f010s_f012_val_upd_req_handler</a> from f010s_task.o(.text) referenced from f010s_task.o(.constdata)
 <LI><a href="#[82]">f010s_f014_val_ntf_cfg_ind_handler</a> from app_f010.o(.text) referenced from app_f010.o(.constdata)
 <LI><a href="#[8c]">f010s_f014_val_upd_req_handler</a> from f010s_task.o(.text) referenced from f010s_task.o(.constdata)
 <LI><a href="#[88]">f010s_init</a> from f010s.o(.text) referenced from f010s.o(.constdata)
 <LI><a href="#[85]">f012_val_upd_rsp_handler</a> from app_f010.o(.text) referenced from app_f010.o(.constdata)
 <LI><a href="#[87]">f013_writer_req_handler</a> from app_f010.o(.text) referenced from app_f010.o(.constdata)
 <LI><a href="#[84]">f014_val_upd_rsp_handler</a> from app_f010.o(.text) referenced from app_f010.o(.constdata)
 <LI><a href="#[86]">f017_writer_cmd_handler</a> from app_f010.o(.text) referenced from app_f010.o(.constdata)
 <LI><a href="#[9c]">f020s_cleanup</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[9b]">f020s_create</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[9a]">f020s_destroy</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[93]">f020s_f024_val_ntf_cfg_ind_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[9d]">f020s_f024_val_upd_req_handler</a> from f020s_task.o(.text) referenced from f020s_task.o(.constdata)
 <LI><a href="#[94]">f020s_f026_val_ind_cfg_ind_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[9e]">f020s_f026_val_upd_req_handler</a> from f020s_task.o(.text) referenced from f020s_task.o(.constdata)
 <LI><a href="#[99]">f020s_init</a> from f020s.o(.text) referenced from f020s.o(.constdata)
 <LI><a href="#[97]">f022_writer_cmd_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[98]">f023_writer_req_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[95]">f024_val_upd_rsp_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[96]">f026_val_upd_rsp_handler</a> from app_f020.o(.text) referenced from app_f020.o(.constdata)
 <LI><a href="#[ad]">f030s_cleanup</a> from f030s.o(.text) referenced from f030s.o(.constdata)
 <LI><a href="#[ac]">f030s_create</a> from f030s.o(.text) referenced from f030s.o(.constdata)
 <LI><a href="#[ab]">f030s_destroy</a> from f030s.o(.text) referenced from f030s.o(.constdata)
 <LI><a href="#[a4]">f030s_f032_val_ntf_cfg_ind_handler</a> from app_f030.o(.text) referenced from app_f030.o(.constdata)
 <LI><a href="#[ae]">f030s_f032_val_upd_req_handler</a> from f030s_task.o(.text) referenced from f030s_task.o(.constdata)
 <LI><a href="#[a5]">f030s_f034_val_ind_cfg_ind_handler</a> from app_f030.o(.text) referenced from app_f030.o(.constdata)
 <LI><a href="#[af]">f030s_f034_val_upd_req_handler</a> from f030s_task.o(.text) referenced from f030s_task.o(.constdata)
 <LI><a href="#[aa]">f030s_init</a> from f030s.o(.text) referenced from f030s.o(.constdata)
 <LI><a href="#[a6]">f032_val_upd_rsp_handler</a> from app_f030.o(.text) referenced from app_f030.o(.constdata)
 <LI><a href="#[a9]">f033_writer_req_handler</a> from app_f030.o(.text) referenced from app_f030.o(.constdata)
 <LI><a href="#[a7]">f034_val_upd_rsp_handler</a> from app_f030.o(.text) referenced from app_f030.o(.constdata)
 <LI><a href="#[a8]">f035_writer_cmd_handler</a> from app_f030.o(.text) referenced from app_f030.o(.constdata)
 <LI><a href="#[be]">f040s_cleanup</a> from f040s.o(.text) referenced from f040s.o(.constdata)
 <LI><a href="#[bd]">f040s_create</a> from f040s.o(.text) referenced from f040s.o(.constdata)
 <LI><a href="#[bc]">f040s_destroy</a> from f040s.o(.text) referenced from f040s.o(.constdata)
 <LI><a href="#[b6]">f040s_f041_val_ind_cfg_ind_handler</a> from app_f040.o(.text) referenced from app_f040.o(.constdata)
 <LI><a href="#[c0]">f040s_f041_val_upd_req_handler</a> from f040s_task.o(.text) referenced from f040s_task.o(.constdata)
 <LI><a href="#[b5]">f040s_f044_val_ntf_cfg_ind_handler</a> from app_f040.o(.text) referenced from app_f040.o(.constdata)
 <LI><a href="#[bf]">f040s_f044_val_upd_req_handler</a> from f040s_task.o(.text) referenced from f040s_task.o(.constdata)
 <LI><a href="#[bb]">f040s_init</a> from f040s.o(.text) referenced from f040s.o(.constdata)
 <LI><a href="#[b8]">f041_val_upd_rsp_handler</a> from app_f040.o(.text) referenced from app_f040.o(.constdata)
 <LI><a href="#[b9]">f042_writer_cmd_handler</a> from app_f040.o(.text) referenced from app_f040.o(.constdata)
 <LI><a href="#[ba]">f043_writer_req_handler</a> from app_f040.o(.text) referenced from app_f040.o(.constdata)
 <LI><a href="#[b7]">f044_val_upd_rsp_handler</a> from app_f040.o(.text) referenced from app_f040.o(.constdata)
 <LI><a href="#[3d]">gapc_bond_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[3c]">gapc_bond_req_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[4a]">gapc_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[48]">gapc_connection_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4b]">gapc_disconnect_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3f]">gapc_encrypt_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[3e]">gapc_encrypt_req_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[46]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[53]">gapc_le_phy_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[49]">gapc_param_update_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[4c]">gapc_param_updated_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[47]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[42]">gapm_activity_created_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[43]">gapm_activity_stopped_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[44]">gapm_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[45]">gapm_gen_rand_nb_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[41]">gapm_profile_added_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[62]">gattc_att_info_req_ind_handler</a> from bass_task.o(.text) referenced 6 times from bass_task.o(.constdata)
 <LI><a href="#[65]">gattc_cmp_evt_handler</a> from bass_task.o(.text) referenced 7 times from bass_task.o(.constdata)
 <LI><a href="#[4d]">gattc_mtu_changed_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[5a]">gattc_read_req_ind_handler</a> from diss_task.o(.text) referenced 8 times from diss_task.o(.constdata)
 <LI><a href="#[63]">gattc_write_req_ind_handler</a> from bass_task.o(.text) referenced 7 times from bass_task.o(.constdata)
 <LI><a href="#[8]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[16]">nvds_del</a> from nvds.o(.text) referenced from rwip.o(.text)
 <LI><a href="#[19]">nvds_erase</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[14]">nvds_get</a> from nvds.o(.text) referenced from rwip.o(.text)
 <LI><a href="#[15]">nvds_put</a> from nvds.o(.text) referenced from rwip.o(.text)
 <LI><a href="#[17]">nvds_read</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[18]">nvds_write</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[69]">oads_cleanup</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[68]">oads_create</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[67]">oads_destroy</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[6a]">oads_enable_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[36]">oads_enable_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[6b]">oads_ffc1_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[38]">oads_ffc1_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[6c]">oads_ffc2_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[3a]">oads_ffc2_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[66]">oads_init</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[10]">platform_reset</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[e]">prf_add_profile</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[d]">prf_cleanup</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[c]">prf_create</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[9]">prf_get_id_from_task</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[a]">prf_get_task_from_id</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[b]">prf_init</a> from prf.o(.text) referenced from main.o(.text)
 <LI><a href="#[1f]">rf_force_agc_enable</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1e]">rf_reset</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1a]">rf_rpl_reg_rd</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1b]">rf_rpl_reg_wr</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[20]">rf_rssi_convert</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1d]">rf_sleep</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[21]">rf_txpwr_cs_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[1c]">rf_txpwr_dbm_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[11]">rwble_sleep_wakeup_end</a> from rwble.o(.text) referenced from main.o(.text)
 <LI><a href="#[13]">rwip_crypt_evt_handler</a> from rwip.o(.text) referenced from rwip.o(.text)
 <LI><a href="#[f]">rwip_reset</a> from rwip.o(.text) referenced from main.o(.text)
 <LI><a href="#[c5]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[12]">uart2_printf</a> from uart2.o(.text) referenced from main.o(.text)
 <LI><a href="#[27]">uart_flow_off</a> from uart.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[26]">uart_flow_on</a> from uart.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[24]">uart_read</a> from uart.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[22]">uart_send</a> from uart.o(.text) referenced from uart.o(.text)
 <LI><a href="#[25]">uart_write</a> from uart.o(.text) referenced from main.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[222]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[223]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[224]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[225]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[226]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[136]"></a>ecc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[138]"></a>h4tl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[146]"></a>h4tl_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
</UL>

<P><STRONG><a name="[14d]"></a>h4tl_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[133]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[142]"></a>ke_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[14b]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[130]"></a>ke_event_callback_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
</UL>

<P><STRONG><a name="[128]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_isr_handler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
</UL>

<P><STRONG><a name="[12b]"></a>ke_event_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_evt_handler
</UL>

<P><STRONG><a name="[143]"></a>ke_event_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
</UL>

<P><STRONG><a name="[134]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[191]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
</UL>

<P><STRONG><a name="[195]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_destroy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_destroy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_destroy
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_destroy
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_destroy
</UL>

<P><STRONG><a name="[f4]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f012_send_ind
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f014_send_ntf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f002_val
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f002_send_ind
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_req_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f040_add_f040s
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f030_add_f030s
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_add_f020s
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f010_add_f010s
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_add_f000s
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_advertising
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_ext_advertising
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_advertising
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_rsp_data
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_indicate_f041_val
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_notify_f044_val
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f041_send_ntf
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f044_send_ntf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f034_val
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f032_val
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f034_send_ntf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f032_send_ntf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f026_val
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f026_send_ind
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_indicate_f012_val
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_notify_f014_val
</UL>

<P><STRONG><a name="[f5]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f012_send_ind
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f014_send_ntf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f002_val
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f002_send_ind
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_req_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f040_add_f040s
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f030_add_f030s
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_add_f020s
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f010_add_f010s
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_add_f000s
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_advertising
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_ext_advertising
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_advertising
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_rsp_data
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_indicate_f041_val
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_notify_f044_val
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f041_send_ntf
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f044_send_ntf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f034_val
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f032_val
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f034_send_ntf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f032_send_ntf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f026_val
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f026_send_ind
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_indicate_f012_val
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_notify_f014_val
</UL>

<P><STRONG><a name="[fc]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[fd]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f002_val_upd_req_handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f041_val_upd_req_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f044_val_upd_req_handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f034_val_upd_req_handler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f032_val_upd_req_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f026_val_upd_req_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f012_val_upd_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f014_val_upd_req_handler
</UL>

<P><STRONG><a name="[117]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f002_val_upd_req_handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f041_val_upd_req_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f044_val_upd_req_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f034_val_upd_req_handler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f032_val_upd_req_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f026_val_upd_req_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f012_val_upd_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f014_val_upd_req_handler
</UL>

<P><STRONG><a name="[160]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[119]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_xs_user
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[113]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
</UL>

<P><STRONG><a name="[120]"></a>ble_util_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[122]"></a>llc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[121]"></a>lld_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[123]"></a>llm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[139]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[13f]"></a>sch_alarm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[126]"></a>sch_alarm_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
</UL>

<P><STRONG><a name="[13c]"></a>sch_arb_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[12a]"></a>sch_arb_event_start_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
</UL>

<P><STRONG><a name="[13e]"></a>sch_plan_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[13d]"></a>sch_prog_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[149]"></a>sch_prog_fifo_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[140]"></a>sch_slice_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[13b]"></a>aes_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[12c]"></a>aes_result_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_evt_handler
</UL>

<P><STRONG><a name="[193]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
</UL>

<P><STRONG><a name="[19a]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[194]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[199]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[14a]"></a>rwip_sw_int_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[11f]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[132]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[12e]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_isr_handler
</UL>

<P><STRONG><a name="[1a4]"></a>gapc_get_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[115]"></a>gapc_get_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[190]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
</UL>

<P><STRONG><a name="[1a6]"></a>attm_svc_create_db128</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[19d]"></a>attm_att_set_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[13a]"></a>rwble_hl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_weight_body_measurement
</UL>

<P><STRONG><a name="[203]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_weight_body_measurement
</UL>

<P><STRONG><a name="[114]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[ec]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f012_send_ind
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f014_send_ntf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f002_val
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f002_send_ind
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_respone
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_send_cmd
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_evt_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f040_add_f040s
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f030_add_f030s
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_add_f020s
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f010_add_f010s
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_add_f000s
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_rsp_data
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_build_adv_data
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f032_0xfff2_rd
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_rd
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f024_0x2a99_ntf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f031_0xfff1_rd
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f041_0x2a2b_rd_ntf
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f021_0x2a85_rd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f024_0x2a99_rd
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f035_0xfff5_rd
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f011_0x2a9b_rd
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f001_0x2a9e_rd
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_ntf
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f041_0x2a2b_cb
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_indicate_f041_val
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_notify_f044_val
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f041_send_ntf
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f044_send_ntf
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f034_val
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f032_val
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f034_send_ntf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f032_send_ntf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f026_val
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f026_send_ind
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_indicate_f012_val
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_notify_f014_val
</UL>

<P><STRONG><a name="[1af]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f010_init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart2_buffer
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f040_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f030_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_init
</UL>

<P><STRONG><a name="[f2]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
</UL>

<P><STRONG><a name="[116]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>

<P><STRONG><a name="[21b]"></a>__ARM_clz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue (via BLX)
</UL>

<P><STRONG><a name="[ce]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[cf]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[df]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[e0]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[10c]"></a>__ARM_common_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler (via BLX)
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via BLX)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler (via BLX)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler (via BLX)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch (via BLX)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup (via BLX)
</UL>

<P><STRONG><a name="[c6]"></a>vectors</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))

<P><STRONG><a name="[c5]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[c8]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[ca]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[c7]"></a>__main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[cc]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via BLX)
</UL>

<P><STRONG><a name="[21a]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via BLX)
</UL>

<P><STRONG><a name="[10]"></a>platform_reset</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>bdaddr_env_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[141]"></a>get_sys_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[d4]"></a>enter_dut_fcc_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>enter_normal_app_mode</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_get_sleep_mode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stack_integrity_check
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>main</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_set_sleep_mode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[137]"></a>rwip_eif_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f3]"></a>appm_start_advertising</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[f6]"></a>appm_stop_advertising</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[f7]"></a>appm_set_adv_data</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_build_adv_data
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[f9]"></a>appm_set_scan_rsp_data</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[fa]"></a>appm_init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_work
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[103]"></a>appm_add_svc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[104]"></a>appm_disconnect</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[105]"></a>appm_create_advertising</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[106]"></a>appm_create_ext_advertising</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[107]"></a>appm_delete_advertising</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[108]"></a>appm_update_param</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_conn_param_req_ind_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[11c]"></a>appm_update_phy_param</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
</UL>

<P><STRONG><a name="[109]"></a>appm_get_dev_name</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[100]"></a>app_batt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[2e]"></a>app_batt_add_bas</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>app_batt_enable_prf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[10b]"></a>app_batt_send_lvl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_batt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[ff]"></a>app_dis_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[2d]"></a>app_dis_add_dis</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>app_oads_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[2f]"></a>app_oad_add_oads</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>app_oads_enable_prf</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[10f]"></a>app_ffc1_ntf_req</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[110]"></a>app_ffc2_ntf_req</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[fe]"></a>app_sec_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[118]"></a>app_sec_get_bond_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[111]"></a>app_sec_remove_bond</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_sec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[112]"></a>app_sec_send_security_req</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_security_req_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[11e]"></a>rwble_init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[124]"></a>rwble_isr</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[14e]"></a>rwble_sleep_enter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[11]"></a>rwble_sleep_wakeup_end</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rwble.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[14c]"></a>rwip_slot_2_lpcycles</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[125]"></a>rwip_timer_hs_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_timer_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[127]"></a>rwip_timer_10ms_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[129]"></a>rwip_timer_hus_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[12d]"></a>rwip_crypt_isr_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[12f]"></a>rwip_driver_init</STRONG> (Thumb, 354 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_callback_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[ef]"></a>rwip_init</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_mode
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_slice_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f]"></a>rwip_reset</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_slice_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>rwip_schedule</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
</UL>

<P><STRONG><a name="[144]"></a>rwip_wakeup</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_start
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[147]"></a>rwip_wakeup_end</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[148]"></a>rwip_isr</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_isr_handler
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_fifo_isr
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_handler
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[da]"></a>rwip_sleep</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slot_2_lpcycles
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_enter
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_stop
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[ed]"></a>nvds_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>nvds_get</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(.text)
</UL>
<P><STRONG><a name="[16]"></a>nvds_del</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(.text)
</UL>
<P><STRONG><a name="[154]"></a>nvds_lock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, nvds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>

<P><STRONG><a name="[15]"></a>nvds_put</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_remove_bond
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(.text)
</UL>
<P><STRONG><a name="[1a5]"></a>prf_pack_char_pres_fmt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[b]"></a>prf_init</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>prf_add_profile</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>prf_create</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>prf_cleanup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[196]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f002_val_upd_req_handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_task_init
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_handle
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_task_init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_task_init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bass_batt_0x2a19_rd
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f034_0xfff4_rd
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f032_0xfff2_rd
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_rd
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f024_0x2a99_ntf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f031_0xfff1_rd
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f041_0x2a2b_rd_ntf
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f021_0x2a85_rd
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f022_0x2a8c_rd
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f023_0x2a8e_rd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f025_0x2a9a_rd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f024_0x2a99_rd
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f033_0xfff3_rd
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f035_0xfff5_rd
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f011_0x2a9b_rd
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f001_0x2a9e_rd
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_ntf
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f041_val_upd_req_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f044_val_upd_req_handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_task_init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_get_att_idx
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_get_att_handle
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f034_val_upd_req_handler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f032_val_upd_req_handler
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_task_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_get_att_idx
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_get_att_handle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f026_val_upd_req_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_task_init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_handle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f012_val_upd_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f014_val_upd_req_handler
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_task_init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_get_att_idx
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_get_att_handle
</UL>

<P><STRONG><a name="[1a1]"></a>prf_src_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f002_val
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_indicate_f041_val
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_notify_f044_val
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f034_val
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f032_val
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f026_val
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_indicate_f012_val
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_notify_f014_val
</UL>

<P><STRONG><a name="[19c]"></a>prf_dst_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[9]"></a>prf_get_id_from_task</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[a]"></a>prf_get_task_from_id</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f012_send_ind
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f014_send_ntf
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f002_send_ind
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f041_send_ntf
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f044_send_ntf
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f034_send_ntf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f032_send_ntf
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f026_send_ind
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[169]"></a>set_flash_clk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_wakeup
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_reduce_voltage_sleep
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[162]"></a>get_flash_ID</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[166]"></a>flash_read_sr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
</UL>

<P><STRONG><a name="[161]"></a>flash_write_sr</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
</UL>

<P><STRONG><a name="[163]"></a>flash_wp_256k</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[164]"></a>flash_wp_ALL</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[165]"></a>flash_advance_init</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[168]"></a>clr_flash_qwfr</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
</UL>

<P><STRONG><a name="[167]"></a>flash_set_dual_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_flash_qwfr
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[eb]"></a>flash_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16a]"></a>flash_erase_sector</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[d2]"></a>flash_read_data</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>

<P><STRONG><a name="[16b]"></a>flash_write_data</STRONG> (Thumb, 346 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[14f]"></a>flash_read</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[150]"></a>flash_write</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_write
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
</UL>

<P><STRONG><a name="[151]"></a>flash_erase</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_erase
</UL>

<P><STRONG><a name="[16c]"></a>flash_write_some_data</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[16d]"></a>flash_test</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[172]"></a>xtal_cal_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[e6]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_clk_calibration
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16e]"></a>CLK32K_AutoCali_init</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[16f]"></a>pll_clk_calibration</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[170]"></a>kmod_calibration</STRONG> (Thumb, 350 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[171]"></a>xvr_reg_initial</STRONG> (Thumb, 656 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_clk_calibration
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xtal_cal_set
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[173]"></a>rf_debug_gpio_init</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[135]"></a>rf_init</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_debug_gpio_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[178]"></a>Delay_us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>

<P><STRONG><a name="[e5]"></a>gpio_config</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_reset_reason
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep_wakeup_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_work
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>gpio_get_input</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[175]"></a>gpio_set</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_state
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_work
</UL>

<P><STRONG><a name="[177]"></a>gpio_set_int_mode</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_config
</UL>

<P><STRONG><a name="[ea]"></a>gpio_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[174]"></a>gpio_triger</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[176]"></a>gpio_wakeup_config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_int_mode
</UL>

<P><STRONG><a name="[18c]"></a>DEBUG_MSG</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[e2]"></a>icu_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>icu_get_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[f1]"></a>icu_set_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_state
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[db]"></a>cpu_reduce_voltage_sleep</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[dc]"></a>cpu_wakeup</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[de]"></a>cpu_idle_sleep</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[f0]"></a>mcu_clk_switch</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[179]"></a>deep_sleep_wakeup_set</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_reset_reason
</UL>

<P><STRONG><a name="[dd]"></a>deep_sleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_reset_reason
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[d0]"></a>cpu_reset</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[17a]"></a>system_reset_reson</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[17b]"></a>system_set_reset_reson</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_reset_reason
</UL>

<P><STRONG><a name="[17c]"></a>test_reset_reason</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_reset_reson
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep_wakeup_set
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep
</UL>

<P><STRONG><a name="[17e]"></a>rw_sleep</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_reduce_voltage_sleep
</UL>

<P><STRONG><a name="[17d]"></a>cpu_24_reduce_voltage_sleep</STRONG> (Thumb, 382 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_sleep
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>

<P><STRONG><a name="[17f]"></a>cpu_24_wakeup</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[e3]"></a>wdt_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1aa]"></a>wdt_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
</UL>

<P><STRONG><a name="[e9]"></a>uart2_init</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[182]"></a>uart2_send</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[180]"></a>clear_uart2_buffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[12]"></a>uart2_printf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f013_writer_req_handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f017_writer_cmd_handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f010_msg_dflt_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f012_val_upd_rsp_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f014_val_upd_rsp_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f012_val_ind_cfg_ind_handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f014_val_ntf_cfg_ind_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f002_val_upd_req_handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f003_writer_req_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f007_writer_cmd_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f000_msg_dflt_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f002_val_upd_rsp_handler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f004_val_upd_rsp_handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f002_val_ind_cfg_ind_handler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_ntf_cfg_ind_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_reset_reson
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset_reson
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_phy_ind_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_req_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_conn_param_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_rsp_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_rsp_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_writer_req_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_msg_dflt_handler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_work
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_ext_advertising
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_advertising
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stack_integrity_check
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f025_0x2a9a_cb
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f024_0x2a99_ntf
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f032_0xfff2_ntf
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f002_0x2a9d_ind
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f012_0x2a9c_ind
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f034_0xfff4_ntf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart2_received_isr
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart2_send_data
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f001_0x2a9e_rd
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ji_huo_scale_and_send
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_ntf
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f041_0x2a2b_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f041_val_upd_req_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f044_val_upd_req_handler
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f043_writer_req_handler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f042_writer_cmd_handler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f040_msg_dflt_handler
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f041_val_upd_rsp_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f044_val_upd_rsp_handler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f041_val_ind_cfg_ind_handler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f044_val_ntf_cfg_ind_handler
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f035_0xfff5_cb
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f034_0xfff4_cb
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f033_0xfff3_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f032_0xfff2_cb
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f031_0xfff1_cb
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f034_val_upd_req_handler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f032_val_upd_req_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f033_writer_req_handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f035_writer_cmd_handler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f030_msg_dflt_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f034_val_upd_rsp_handler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f032_val_upd_rsp_handler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f034_val_ind_cfg_ind_handler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f032_val_ntf_cfg_ind_handler
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f026_0x2a9f_cb
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f024_0x2a99_cb
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f023_0x2a8e_cb
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_0x2a8c_cb
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f021_0x2a85_cb
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f026_val_upd_req_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f023_writer_req_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_writer_cmd_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f020_msg_dflt_handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f026_val_upd_rsp_handler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f024_val_upd_rsp_handler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f026_val_ind_cfg_ind_handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_ntf_cfg_ind_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f012_val_upd_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f014_val_upd_req_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[18d]"></a>uart2_isr</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[22]"></a>uart_send</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_respone
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[183]"></a>hci_data_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_get_event
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
</UL>

<P><STRONG><a name="[e8]"></a>uart_init</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_mode
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[184]"></a>uart0_printf</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[26]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>uart_read</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>uart_write</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[185]"></a>host_send_cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[186]"></a>uart_rx_cmd_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_set_sleep_mode
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
</UL>

<P><STRONG><a name="[187]"></a>uart_rx_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[188]"></a>uart_isr</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_send_cmd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[18a]"></a>uart_rx_cmd_respone</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[18b]"></a>host_get_event</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
</UL>

<P><STRONG><a name="[d6]"></a>uart_h4tl_data_switch</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_get_event
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
</UL>

<P><STRONG><a name="[e4]"></a>intc_init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>IRQ_Exception</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_isr
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_wakeup
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[c9]"></a>FIQ_Exception</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_isr
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[18e]"></a>dma_isr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[18f]"></a>diss_compute_cfg_flag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[15e]"></a>diss_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[19b]"></a>diss_handle_to_value</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[197]"></a>diss_value_to_handle</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[198]"></a>diss_check_val_len</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[192]"></a>diss_task_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[19f]"></a>bass_get_att_handle</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
</UL>

<P><STRONG><a name="[15f]"></a>bass_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1a2]"></a>bass_get_att_idx</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1a3]"></a>bass_exe_operation</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[19e]"></a>bass_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[1a8]"></a>oad_save_reciveData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[1a9]"></a>oad_updating_user_section_begin</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[d8]"></a>oad_updating_user_section_pro</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[1ae]"></a>oad_updating_user_section_end</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[10e]"></a>oadImgIdentifyWrite</STRONG> (Thumb, 786 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
</UL>

<P><STRONG><a name="[1ad]"></a>oadImgBlockWrite</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_end
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[15d]"></a>oads_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1a7]"></a>oads_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[1b0]"></a>app_f000_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_f000.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[28]"></a>app_f000_add_f000s</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1b1]"></a>app_f004_send_ntf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f007_writer_cmd_handler
</UL>

<P><STRONG><a name="[1b2]"></a>app_f002_send_ind</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f007_writer_cmd_handler
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f002_0x2a9d_ind
</UL>

<P><STRONG><a name="[1b4]"></a>f000s_notify_f004_val</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f004_val_upd_req_handler
</UL>

<P><STRONG><a name="[1b5]"></a>f000s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f002_val
</UL>

<P><STRONG><a name="[1b6]"></a>f000s_indicate_f002_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_handle
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_f002_val_upd_req_handler
</UL>

<P><STRONG><a name="[158]"></a>f000s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1b7]"></a>f000s_get_att_idx</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1b3]"></a>f000s_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_init
</UL>

<P><STRONG><a name="[1b8]"></a>app_f010_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_f010.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[29]"></a>app_f010_add_f010s</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>app_f014_send_ntf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f017_writer_cmd_handler
</UL>

<P><STRONG><a name="[1ba]"></a>app_f012_send_ind</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f017_writer_cmd_handler
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f012_0x2a9c_ind
</UL>

<P><STRONG><a name="[1bc]"></a>f010s_notify_f014_val</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, f010s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f014_val_upd_req_handler
</UL>

<P><STRONG><a name="[1bd]"></a>f010s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f010s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_indicate_f012_val
</UL>

<P><STRONG><a name="[1be]"></a>f010s_indicate_f012_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f010s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_f012_val_upd_req_handler
</UL>

<P><STRONG><a name="[15a]"></a>f010s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, f010s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1bf]"></a>f010s_get_att_idx</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f010s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1bb]"></a>f010s_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f010s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_init
</UL>

<P><STRONG><a name="[1c0]"></a>app_f020_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_f020.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2a]"></a>app_f020_add_f020s</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1c1]"></a>app_f024_send_ntf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f024_0x2a99_ntf
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_writer_cmd_handler
</UL>

<P><STRONG><a name="[1c2]"></a>app_f026_send_ind</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_ntf
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_writer_cmd_handler
</UL>

<P><STRONG><a name="[1c4]"></a>f020s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f026_val
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
</UL>

<P><STRONG><a name="[1c5]"></a>f020s_notify_f024_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f024_val_upd_req_handler
</UL>

<P><STRONG><a name="[1c6]"></a>f020s_indicate_f026_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_f026_val_upd_req_handler
</UL>

<P><STRONG><a name="[15b]"></a>f020s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1c7]"></a>f020s_get_att_idx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1c3]"></a>f020s_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_init
</UL>

<P><STRONG><a name="[1cd]"></a>app_f030_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_f030.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2b]"></a>app_f030_add_f030s</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1ce]"></a>app_f032_send_ntf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f032_0xfff2_ntf
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f035_writer_cmd_handler
</UL>

<P><STRONG><a name="[1cf]"></a>app_f034_send_ntf</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f034_0xfff4_ntf
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f035_writer_cmd_handler
</UL>

<P><STRONG><a name="[1d1]"></a>f030s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f030s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f034_val
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f032_val
</UL>

<P><STRONG><a name="[1d2]"></a>f030s_notify_f032_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f030s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f032_val_upd_req_handler
</UL>

<P><STRONG><a name="[1d3]"></a>f030s_notify_f034_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f030s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_f034_val_upd_req_handler
</UL>

<P><STRONG><a name="[15c]"></a>f030s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, f030s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1d4]"></a>f030s_get_att_idx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, f030s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1d0]"></a>f030s_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f030s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_init
</UL>

<P><STRONG><a name="[1da]"></a>app_f040_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_f040.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2c]"></a>app_f040_add_f040s</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>app_f044_send_ntf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f042_writer_cmd_handler
</UL>

<P><STRONG><a name="[1dc]"></a>app_f041_send_ntf</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f042_writer_cmd_handler
</UL>

<P><STRONG><a name="[1de]"></a>f040s_notify_f044_val</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, f040s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f044_val_upd_req_handler
</UL>

<P><STRONG><a name="[1df]"></a>f040s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f040s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_indicate_f041_val
</UL>

<P><STRONG><a name="[1e0]"></a>f040s_indicate_f041_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f040s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_f041_val_upd_req_handler
</UL>

<P><STRONG><a name="[159]"></a>f040s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, f040s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[1e1]"></a>f040s_get_att_idx</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f040s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[1dd]"></a>f040s_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, f040s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_init
</UL>

<P><STRONG><a name="[1e3]"></a>printf_hex</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart2_received_isr
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart2_send_data
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>

<P><STRONG><a name="[1e4]"></a>xs_uart_send_data</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_scale_user
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_time
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_modify_user_birthday
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ji_huo_scale_and_send
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_take_measure
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_updata_db
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_get_user_info
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_update_user_info
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_regist_user_birthday
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_to_loop_regist
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f041_0x2a2b_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f032_0xfff2_cb
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f031_0xfff1_cb
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f026_0x2a9f_cb
</UL>

<P><STRONG><a name="[1e5]"></a>delay_1s_to_loop_regist</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f026_0x2a9f_cb
</UL>

<P><STRONG><a name="[1e6]"></a>delay_1s_regist_user_birthday</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
</UL>

<P><STRONG><a name="[1e7]"></a>delay_1s_update_user_info</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f024_0x2a99_cb
</UL>

<P><STRONG><a name="[1e8]"></a>delay_1s_get_user_info</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_updata_db
</UL>

<P><STRONG><a name="[1e9]"></a>delay_1s_updata_db</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_get_user_info
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
</UL>

<P><STRONG><a name="[1ea]"></a>delay_1s_send_take_measure</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f034_0xfff4_cb
</UL>

<P><STRONG><a name="[1eb]"></a>set_f026_0x2a9f_ntf</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f026_send_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_resgist_ok
</UL>

<P><STRONG><a name="[1ec]"></a>delay_1s_send_resgist_ok</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_ntf
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
</UL>

<P><STRONG><a name="[1ed]"></a>ji_huo_scale_and_send</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
</UL>

<P><STRONG><a name="[1ee]"></a>delay_1s_modify_user_birthday</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
</UL>

<P><STRONG><a name="[1ef]"></a>delay_1s_send_time</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
</UL>

<P><STRONG><a name="[11d]"></a>xs_user_task</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_time
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_modify_user_birthday
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ji_huo_scale_and_send
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_resgist_ok
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_take_measure
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_updata_db
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_get_user_info
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_update_user_info
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_regist_user_birthday
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_to_loop_regist
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_xs_user
</UL>

<P><STRONG><a name="[102]"></a>init_work</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[1f0]"></a>set_f001_0x2a9e_rd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f1]"></a>set_f011_0x2a9b_rd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f2]"></a>set_f035_0xfff5_rd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f3]"></a>set_f033_0xfff3_rd</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f4]"></a>set_f024_0x2a99_rd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f5]"></a>set_f025_0x2a9a_rd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f6]"></a>set_f023_0x2a8e_rd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f7]"></a>set_f022_0x2a8c_rd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f8]"></a>set_f021_0x2a85_rd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>

<P><STRONG><a name="[1f9]"></a>set_select_user_info_to_ble_chara</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f021_0x2a85_rd
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f022_0x2a8c_rd
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f023_0x2a8e_rd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f025_0x2a9a_rd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f024_0x2a99_rd
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f033_0xfff3_rd
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f035_0xfff5_rd
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f011_0x2a9b_rd
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f001_0x2a9e_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_select_user_info
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f024_0x2a99_cb
</UL>

<P><STRONG><a name="[1fa]"></a>init_select_user_info</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_state
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f026_0x2a9f_cb
</UL>

<P><STRONG><a name="[11a]"></a>set_ble_state</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_set_sleep_mode
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_select_user_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[1fb]"></a>xs_uart2_send_data</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex
</UL>

<P><STRONG><a name="[1fc]"></a>xs_uart2_received_isr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex
</UL>

<P><STRONG><a name="[1fe]"></a>ignore_repetition</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart_received_buf
</UL>

<P><STRONG><a name="[1fd]"></a>clear_uart_received_buf</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ignore_repetition
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f026_0x2a9f_cb
</UL>

<P><STRONG><a name="[1ff]"></a>set_f034_0xfff4_ntf</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f034_send_ntf
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_weight_body_measurement
</UL>

<P><STRONG><a name="[200]"></a>set_f012_0x2a9c_ind</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f012_send_ind
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_weight_body_measurement
</UL>

<P><STRONG><a name="[201]"></a>set_f002_0x2a9d_ind</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f002_send_ind
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_weight_body_measurement
</UL>

<P><STRONG><a name="[202]"></a>update_weight_body_measurement</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f002_0x2a9d_ind
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f012_0x2a9c_ind
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f034_0xfff4_ntf
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
</UL>

<P><STRONG><a name="[204]"></a>set_f032_0xfff2_ntf</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f032_send_ntf
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
</UL>

<P><STRONG><a name="[205]"></a>set_f041_0x2a2b_rd_ntf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f041_0x2a2b_cb
</UL>

<P><STRONG><a name="[206]"></a>set_f031_0xfff1_rd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_received_isr
</UL>

<P><STRONG><a name="[189]"></a>xs_uart_received_isr</STRONG> (Thumb, 870 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f031_0xfff1_rd
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f041_0x2a2b_rd_ntf
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f032_0xfff2_ntf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_weight_body_measurement
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ignore_repetition
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_select_user_info
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_time
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_modify_user_birthday
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_resgist_ok
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f026_0x2a9f_ntf
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_updata_db
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_get_user_info
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_regist_user_birthday
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[1c8]"></a>f021_0x2a85_cb</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[1c9]"></a>f022_0x2a8c_cb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[1ca]"></a>f023_0x2a8e_cb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[1cb]"></a>f024_0x2a99_cb</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_user_info_to_ble_chara
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_update_user_info
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[207]"></a>set_f024_0x2a99_ntf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
</UL>

<P><STRONG><a name="[208]"></a>f025_0x2a9a_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[209]"></a>set_f026_0x2a9f_rd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1cc]"></a>f026_0x2a9f_cb</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart_received_buf
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_select_user_info
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_to_loop_regist
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[1d6]"></a>f031_0xfff1_cb</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[20a]"></a>set_f032_0xfff2_rd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[20b]"></a>get_scale_user</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f032_0xfff2_cb
</UL>

<P><STRONG><a name="[1d5]"></a>f032_0xfff2_cb</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_scale_user
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[1d8]"></a>f033_0xfff3_cb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[20c]"></a>set_f034_0xfff4_rd</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>

<P><STRONG><a name="[1d7]"></a>f034_0xfff4_cb</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1s_send_take_measure
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[1d9]"></a>f035_0xfff5_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[1e2]"></a>f041_0x2a2b_cb</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, work.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_f041_0x2a2b_rd_ntf
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[20d]"></a>set_bass_batt_0x2a19_rd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, work.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>

<P><STRONG><a name="[20e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[211]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[215]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[216]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[217]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[218]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[219]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[21f]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[cd]"></a>__scatterload</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload (via BLX)
</UL>

<P><STRONG><a name="[210]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[20f]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[212]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[214]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[213]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[21c]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[181]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[2]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[3]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[4]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[e1]"></a>stack_integrity_check</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_normal_app_mode
</UL>

<P><STRONG><a name="[ee]"></a>rom_env_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>appm_build_adv_data</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
</UL>

<P><STRONG><a name="[32]"></a>bass_batt_level_ntf_cfg_ind_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>batt_level_upd_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>bass_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>app_batt_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>oads_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>app_oads_msg_dflt_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>app_ffc1_writer_req_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>app_ffc2_writer_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>oads_ffc1_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>oads_ffc2_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>gapc_bond_req_ind_handler</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>gapc_bond_ind_handler</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>gapc_encrypt_req_ind_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>gapc_encrypt_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>app_sec_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>app_get_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[42]"></a>gapm_activity_created_ind_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gapm_activity_stopped_ind_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 484 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_get_bond_status
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_advertising
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_rsp_data
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 514 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_state
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_get_bond_status
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_state
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>appm_msg_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>gattc_mtu_changed_ind_handler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_phy_param
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>app_update_conn_param_req_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>app_send_security_req_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>app_ancs_req_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>app_period_timer_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>app_mtu_exchange_req_handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>gapc_le_phy_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>app_xs_user</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xs_user_task
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[13]"></a>rwip_crypt_evt_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_result_handler
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(.text)
</UL>
<P><STRONG><a name="[131]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
</UL>

<P><STRONG><a name="[155]"></a>nvds_walk_tag</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[17]"></a>nvds_read</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>nvds_write</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>nvds_erase</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[153]"></a>nvds_browse_tag</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_lock
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>

<P><STRONG><a name="[152]"></a>nvds_init_memory</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>

<P><STRONG><a name="[156]"></a>nvds_purge</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[157]"></a>prf_itf_get</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_prf_itf_get
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_prf_itf_get
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_prf_itf_get
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_prf_itf_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_prf_itf_get
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_prf_itf_get
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_prf_itf_get
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[1e]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>rf_txpwr_cs_get</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>rf_force_agc_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>diss_init</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_compute_cfg_flag
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>diss_destroy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>diss_create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>diss_cleanup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>diss_set_value_req_handler</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_check_val_len
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_handle_to_value
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>diss_value_cfm_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>bass_init</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_task_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>bass_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>bass_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>bass_cleanup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[1a0]"></a>bass_notify_batt_lvl</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>

<P><STRONG><a name="[60]"></a>bass_enable_req_handler</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>bass_batt_level_upd_req_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>oads_init</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_task_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db128
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>oads_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>oads_create</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>oads_cleanup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[1ab]"></a>oadImgIdentifyReq</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[1ac]"></a>oadImgBlockReq</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[6a]"></a>oads_enable_req_handler</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>oads_ffc1_upd_req_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>oads_ffc2_upd_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>f000s_f004_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>f000s_f002_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>f004_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>f002_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>app_f000_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>f007_writer_cmd_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f002_send_ind
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f004_send_ntf
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>f003_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f000.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f000.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>f000s_init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_task_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>f000s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f000s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>f000s_create</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, f000s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>f000s_cleanup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, f000s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f000s.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>f000s_f004_val_upd_req_handler</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_notify_f004_val
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>f000s_f002_val_upd_req_handler</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_indicate_f002_val
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f000s_get_att_idx
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, f000s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f000s_task.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>f010s_f014_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f010.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>f010s_f012_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f010.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>f014_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f010.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>f012_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f010.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>app_f010_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f010.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>f017_writer_cmd_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f012_send_ind
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f014_send_ntf
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f010.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>f013_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f010.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f010.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>f010s_init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, f010s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>f010s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f010s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>f010s_create</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, f010s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f010s.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>f010s_cleanup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, f010s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f010s.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>f010s_f014_val_upd_req_handler</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, f010s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_notify_f014_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s_task.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>f010s_f012_val_upd_req_handler</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, f010s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_indicate_f012_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s_task.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, f010s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s_task.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, f010s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s_task.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, f010s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f010s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s_task.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, f010s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f010s_task.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>f020s_f024_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>f020s_f026_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>f024_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>f026_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>app_f020_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>f022_writer_cmd_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f026_send_ind
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f024_send_ntf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>f023_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f020.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f020.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>f020s_init</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>f020s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f020s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>f020s_create</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, f020s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>f020s_cleanup</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, f020s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f020s.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>f020s_f024_val_upd_req_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_notify_f024_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>f020s_f026_val_upd_req_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_indicate_f026_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 300 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f026_0x2a9f_cb
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f024_0x2a99_cb
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f023_0x2a8e_cb
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f022_0x2a8c_cb
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f021_0x2a85_cb
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f020s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, f020s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f020s_task.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>f030s_f032_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f030.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>f030s_f034_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f030.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>f032_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f030.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>f034_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f030.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>app_f030_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f030.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>f035_writer_cmd_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f034_send_ntf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f032_send_ntf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f030.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>f033_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f030.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>f030s_init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, f030s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>f030s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f030s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>f030s_create</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, f030s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f030s.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>f030s_cleanup</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, f030s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f030s.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>f030s_f032_val_upd_req_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, f030s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f032_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s_task.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>f030s_f034_val_upd_req_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, f030s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_notify_f034_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s_task.o(.constdata)
</UL>
<P><STRONG><a name="[b0]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, f030s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s_task.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, f030s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f035_0xfff5_cb
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f034_0xfff4_cb
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f033_0xfff3_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f032_0xfff2_cb
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f031_0xfff1_cb
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s_task.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, f030s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f030s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s_task.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, f030s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f030s_task.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>f040s_f044_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f040.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>f040s_f041_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f040.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>f044_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f040.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>f041_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f040.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>app_f040_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f040.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>f042_writer_cmd_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f041_send_ntf
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_f044_send_ntf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f040.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>f043_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_f040.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_f040.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>f040s_init</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, f040s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>f040s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f040s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>f040s_create</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, f040s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f040s.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>f040s_cleanup</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, f040s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f040s.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>f040s_f044_val_upd_req_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, f040s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_notify_f044_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s_task.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>f040s_f041_val_upd_req_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, f040s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_indicate_f041_val
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s_task.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, f040s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s_task.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, f040s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f041_0x2a2b_cb
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s_task.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, f040s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f040s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s_task.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, f040s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f040s_task.o(.constdata)
</UL>
<P><STRONG><a name="[21e]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[21d]"></a>_printf_core</STRONG> (Thumb, 1764 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[221]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[220]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[23]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
